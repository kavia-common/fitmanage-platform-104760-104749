{"is_source_file": true, "format": "Dart", "description": "This file defines the AppRouter class for a Flutter application, setting up routing logic including route parsing, route delegation, and navigation for various app pages such as login, registration, dashboard, and other protected sections.", "external_files": ["../state/auth_provider.dart", "../ui/layout/base_scaffold.dart", "../ui/pages/dashboard_page.dart", "../ui/pages/workouts_page.dart", "../ui/pages/diet_page.dart", "../ui/pages/clients_page.dart", "../ui/pages/notifications_page.dart", "../ui/pages/settings_page.dart", "../ui/pages/login_page.dart", "../ui/pages/register_page.dart", "../ui/pages/splash_page.dart"], "external_methods": ["context.watch()"], "published": ["AppRouter", "RouterConfig", "_SimpleRouteParser", "_SimpleRouterDelegate"], "classes": [{"name": "AppRouter", "description": "Contains static configuration for routing using Router API, serving as the entry point for the app's navigation setup."}, {"name": "_SimpleRouteParser", "description": "Parses route information from URLs into simple route names, mainly converts URL paths into internal route identifiers."}, {"name": "_SimpleRouterDelegate", "description": "Manages the app's navigation stack, handles route changes, authentication guards, and builds the appropriate pages based on current path."}], "methods": [{"name": "parseRouteInformation", "description": "Converts RouteInformation into a route string; defaults to '/splash' if path is empty."}, {"name": "restoreRouteInformation", "description": "Restores RouteInformation from a route string for URL synchronization."}, {"name": "setNewPath", "description": "Public method to update the current navigation path and notify listeners."}, {"name": "setNewRoutePath", "description": "Sets a new route path asynchronously, invoking setNewPath."}, {"name": "_requiresAuth", "description": "Checks whether a given path requires user authentication."}, {"name": "build", "description": "Builds the Navigator widget with pages based on authentication status and current route."}, {"name": "_guardPath", "description": "Redirects to login if trying to access protected routes without authentication."}, {"name": "_buildBody", "description": "Returns the widget corresponding to the current route path."}], "calls": ["context.watch<AuthProvider>()"], "search-terms": ["AppRouter", "RouterConfig", "RouteInformationParser", "RouterDelegate", "Navigation", "Route guarding", "Flutter routing", "Page navigation", "Protected routes", "AuthProvider"], "state": 2, "file_id": 19, "knowledge_revision": 79, "git_revision": "", "revision_history": [{"41": ""}, {"63": ""}, {"79": ""}], "hash": "0e5fda42debabee32029ca2594109597", "format-version": 4, "code-base-name": "fitness_nutrition_frontend", "filename": "fitness_nutrition_frontend/lib/routing/app_router.dart"}